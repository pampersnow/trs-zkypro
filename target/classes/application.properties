# 端口号
server.port=8080

#session 时间
server.session-timeout=900 
server.context-path=/
server.tomcat.compression=off
server.tomcat.max-threads=800
server.tomcat.uri-encoding=UTF-8
spring.jmx.default-domain=smr-web
#jsp
spring.mvc.view.prefix= /admin/
spring.mvc.view.suffix= .jsp

# 驱动配置信息   根据自己的需要选择数据库的驱动
spring.datasource.url = jdbc\:mysql\://localhost\:3306/sys_info?useUnicode\=true&characterEncoding\=utf-8&useSSL\=false
spring.datasource.username = root
spring.datasource.password = 1234
spring.datasource.driverClassName =com.mysql.jdbc.Driver
#连接池的配置信息
## 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
#mybatis
mybatis.config-locations=classpath\:mybatis-config.xml 
mybatis.type-aliases-package=com.trs.bean
mybatis.mapper-locations=classpath:com/trs/mapper/Mapper/*.xml,com/trs/mapper/mapping/*.xml
#打印sql
logging.level.com.wangti.controller=WARN
logging.level.com.wangti.dao=DEBUG

# redis 缓存相关配置
#Redis数据库索引（默认为0）
spring.redis.database=0
#redis 服务器地址
spring.redis.host=127.0.0.1
#端口号
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最小空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000
